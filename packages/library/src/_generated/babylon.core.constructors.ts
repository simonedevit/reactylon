const ConstructorsMap: Record<string, Array<string>> = {
    abstractActionManager: [],
    action: ['triggerOptions', 'condition'],
    actionEvent: ['source', 'pointerX', 'pointerY', 'meshUnderPointer', 'sourceEvent', 'additionalData'],
    actionManager: ['scene'],
    condition: ['actionManager'],
    predicateCondition: ['actionManager', 'predicate'],
    stateCondition: ['actionManager', 'target', 'value'],
    valueCondition: ['actionManager', 'target', 'propertyPath', 'value', 'operator'],
    combineAction: ['triggerOptions', 'children', 'condition', 'enableChildrenConditions'],
    doNothingAction: ['triggerOptions', 'condition'],
    executeCodeAction: ['triggerOptions', 'func', 'condition'],
    incrementValueAction: ['triggerOptions', 'target', 'propertyPath', 'value', 'condition'],
    playAnimationAction: ['triggerOptions', 'target', 'from', 'to', 'loop', 'condition'],
    setParentAction: ['triggerOptions', 'target', 'parent', 'condition'],
    setStateAction: ['triggerOptions', 'target', 'value', 'condition'],
    setValueAction: ['triggerOptions', 'target', 'propertyPath', 'value', 'condition'],
    stopAnimationAction: ['triggerOptions', 'target', 'condition'],
    switchBooleanAction: ['triggerOptions', 'target', 'propertyPath', 'condition'],
    playSoundAction: ['triggerOptions', 'sound', 'condition'],
    stopSoundAction: ['triggerOptions', 'sound', 'condition'],
    interpolateValueAction: ['triggerOptions', 'target', 'propertyPath', 'value', 'duration', 'condition', 'stopOtherAnimations', 'onInterpolationDone'],
    addAnimationExtensions: ['sceneClass', 'boneClass'],
    animatable: ['scene', 'target', 'fromFrame', 'toFrame', 'loopAnimation', 'speedRatio', 'onAnimationEnd', 'animations', 'onAnimationLoop', 'isAdditive', 'playOrder'],
    registerTargetForLateAnimationBinding: ['scene', 'runtimeAnimation', 'originalValue'],
    animation: ['name', 'targetProperty', 'framePerSecond', 'dataType', 'loopMode', 'enableBlending'],
    animationEvent: ['frame', 'action', 'onlyOnce'],
    animationGroup: ['name', 'scene', 'weight', 'playOrder'],
    animationGroupMask: ['names', 'mode'],
    animationPropertiesOverride: [],
    animationRange: ['name', 'from', 'to'],
    backEase: ['amplitude'],
    bezierCurveEase: ['x1', 'y1', 'x2', 'y2'],
    bounceEase: ['bounces', 'bounciness'],
    easingFunction: [],
    elasticEase: ['oscillations', 'springiness'],
    exponentialEase: ['exponent'],
    powerEase: ['power'],
    pathCursor: ['_path'],
    runtimeAnimation: ['target', 'animation', 'scene', 'host'],
    analyser: ['scene'],
    audioEngine: ['hostElement', 'audioContext', 'audioDestination'],
    audioSceneComponent: ['scene'],
    sound: ['name', 'urlOrArrayBuffer', 'scene', 'readyToPlayCallback', 'options'],
    soundTrack: ['scene', 'options'],
    weightedSound: ['loop', 'sounds', 'weights'],
    bakedVertexAnimationManager: ['scene'],
    vertexAnimationBaker: ['scene', 'meshOrSkeleton'],
    autoRotationBehavior: [],
    bouncingBehavior: [],
    framingBehavior: [],
    attachToBoxBehavior: ['_ui'],
    baseSixDofDragBehavior: [],
    fadeInOutBehavior: [],
    followBehavior: [],
    handConstraintBehavior: [],
    multiPointerScaleBehavior: [],
    pointerDragBehavior: ['options'],
    sixDofDragBehavior: [],
    surfaceMagnetismBehavior: [],
    bone: ['name', 'skeleton', 'parentBone', 'localMatrix', 'restMatrix', 'bindMatrix', 'index'],
    boneIKController: ['mesh', 'bone', 'options'],
    boneLookController: ['mesh', 'bone', 'target', 'options'],
    skeleton: ['name', 'id', 'scene'],
    buffer: ['engine', 'data', 'updatable', 'stride', 'postponeInternalCreation', 'instanced', 'useBytes', 'divisor', 'label'],
    vertexBuffer: [
        'engine',
        'data',
        'kind',
        'updatableOrOptions',
        'postponeInternalCreation',
        'stride',
        'instanced',
        'offset',
        'size',
        'type',
        'normalized',
        'useBytes',
        'divisor',
        'takeBufferOwnership',
    ],
    copyFloatData: ['input', 'size', 'type', 'byteOffset', 'byteStride', 'normalized', 'totalVertices', 'output'],
    enumerateFloatValues: ['data', 'byteOffset', 'byteStride', 'componentCount', 'componentType', 'count', 'normalized', 'callback'],
    getFloatData: ['data', 'size', 'type', 'byteOffset', 'byteStride', 'normalized', 'totalVertices', 'forceCopy'],
    getTypeByteLength: ['type'],
    dataBuffer: [],
    storageBuffer: ['engine', 'size', 'creationFlags', 'label'],
    baseCameraMouseWheelInput: [],
    baseCameraPointersInput: [],
    arcRotateCameraGamepadInput: [],
    arcRotateCameraKeyboardMoveInput: [],
    arcRotateCameraMouseWheelInput: [],
    arcRotateCameraPointersInput: [],
    arcRotateCameraVRDeviceOrientationInput: [],
    flyCameraKeyboardInput: [],
    flyCameraMouseInput: [],
    followCameraKeyboardMoveInput: [],
    followCameraMouseWheelInput: [],
    followCameraPointersInput: [],
    freeCameraDeviceOrientationInput: [],
    freeCameraGamepadInput: [],
    freeCameraKeyboardMoveInput: [],
    freeCameraMouseInput: ['touchEnabled'],
    freeCameraMouseWheelInput: [],
    freeCameraTouchInput: ['allowMouse'],
    setStereoscopicAnaglyphRigMode: ['camera'],
    setStereoscopicRigMode: ['camera'],
    setVRRigMode: ['camera', 'rigParams'],
    anaglyphArcRotateCamera: ['name', 'alpha', 'beta', 'radius', 'target', 'interaxialDistance', 'scene'],
    anaglyphFreeCamera: ['name', 'position', 'interaxialDistance', 'scene'],
    anaglyphGamepadCamera: ['name', 'position', 'interaxialDistance', 'scene'],
    anaglyphUniversalCamera: ['name', 'position', 'interaxialDistance', 'scene'],
    stereoscopicArcRotateCamera: ['name', 'alpha', 'beta', 'radius', 'target', 'interaxialDistance', 'isStereoscopicSideBySide', 'scene'],
    stereoscopicFreeCamera: ['name', 'position', 'interaxialDistance', 'isStereoscopicSideBySide', 'scene'],
    stereoscopicGamepadCamera: ['name', 'position', 'interaxialDistance', 'isStereoscopicSideBySide', 'scene'],
    stereoscopicScreenUniversalCamera: ['name', 'position', 'scene', 'distanceToProjectionPlane', 'distanceBetweenEyes'],
    stereoscopicUniversalCamera: ['name', 'position', 'interaxialDistance', 'isStereoscopicSideBySide', 'scene'],
    vRCameraMetrics: [],
    vRDeviceOrientationArcRotateCamera: ['name', 'alpha', 'beta', 'radius', 'target', 'scene', 'compensateDistortion', 'vrCameraMetrics'],
    vRDeviceOrientationFreeCamera: ['name', 'position', 'scene', 'compensateDistortion', 'vrCameraMetrics'],
    vRDeviceOrientationGamepadCamera: ['name', 'position', 'scene', 'compensateDistortion', 'vrCameraMetrics'],
    vRExperienceHelper: ['scene', 'webVROptions'],
    arcRotateCamera: ['name', 'alpha', 'beta', 'radius', 'target', 'scene', 'setActiveOnSceneIfNoneActive'],
    arcRotateCameraInputsManager: ['camera'],
    camera: ['name', 'position', 'scene', 'setActiveOnSceneIfNoneActive'],
    cameraInputsManager: ['camera'],
    deviceOrientationCamera: ['name', 'position', 'scene'],
    flyCamera: ['name', 'position', 'scene', 'setActiveOnSceneIfNoneActive'],
    flyCameraInputsManager: ['camera'],
    arcFollowCamera: ['name', 'alpha', 'beta', 'radius', 'target', 'scene'],
    followCamera: ['name', 'position', 'scene', 'lockedTarget'],
    followCameraInputsManager: ['camera'],
    freeCamera: ['name', 'position', 'scene', 'setActiveOnSceneIfNoneActive'],
    freeCameraInputsManager: ['camera'],
    gamepadCamera: ['name', 'position', 'scene'],
    targetCamera: ['name', 'position', 'scene', 'setActiveOnSceneIfNoneActive'],
    touchCamera: ['name', 'position', 'scene'],
    universalCamera: ['name', 'position', 'scene'],
    virtualJoysticksCamera: ['name', 'position', 'scene'],
    collider: [],
    defaultCollisionCoordinator: [],
    gPUPicker: [],
    intersectionInfo: ['bu', 'bv', 'distance'],
    _MeshCollisionData: [],
    pickingInfo: [],
    setOpenGLOrientationForUV: ['value'],
    computeEffect: ['baseName', 'options', 'engine', 'key'],
    computeShader: ['name', 'engine', 'shaderPath', 'options'],
    boundingInfoHelper: ['engine'],
    computeShaderBoundingHelper: ['engine'],
    transformFeedbackBoundingHelper: ['engine'],
    octree: ['creationFunc', 'maxBlockCapacity', 'maxDepth'],
    octreeBlock: ['minPoint', 'maxPoint', 'capacity', 'depth', 'maxDepth', 'creationFunc'],
    octreeSceneComponent: ['scene'],
    boundingBox: ['min', 'max', 'worldMatrix'],
    boundingInfo: ['minimum', 'maximum', 'worldMatrix'],
    boundingSphere: ['min', 'max', 'worldMatrix'],
    addRayExtensions: ['sceneClass', 'cameraClass'],
    pickingRay: ['scene', 'x', 'y', 'world', 'camera', 'cameraViewSpace'],
    pickingRayInCameraSpace: ['scene', 'x', 'y', 'camera'],
    pickingRayInCameraSpaceToRef: ['scene', 'x', 'y', 'result', 'camera'],
    pickingRayToRef: ['scene', 'x', 'y', 'world', 'result', 'camera', 'cameraViewSpace', 'enableDistantPicking'],
    getForwardRay: ['camera', 'length', 'transform', 'origin'],
    getForwardRayToRef: ['camera', 'refRay', 'length', 'transform', 'origin'],
    multiPick: ['scene', 'x', 'y', 'predicate', 'camera', 'trianglePredicate'],
    multiPickWithRay: ['scene', 'ray', 'predicate', 'trianglePredicate'],
    pick: ['scene', 'x', 'y', 'predicate', 'fastCheck', 'camera', 'trianglePredicate', '_enableDistantPicking'],
    pickWithBoundingInfo: ['scene', 'x', 'y', 'predicate', 'fastCheck', 'camera'],
    pickWithRay: ['scene', 'ray', 'predicate', 'fastCheck', 'trianglePredicate'],
    ray: ['origin', 'direction', 'length', 'epsilon'],
    axesViewer: ['scene', 'scaleLines', 'renderingGroupId', 'xAxis', 'yAxis', 'zAxis', 'lineThickness'],
    boneAxesViewer: ['scene', 'bone', 'mesh', 'scaleLines'],
    debugLayer: ['scene'],
    directionalLightFrustumViewer: ['light', 'camera'],
    physicsViewer: ['scene'],
    rayHelper: ['ray'],
    skeletonViewer: ['skeleton', 'mesh', 'scene', 'autoUpdateBonesMatrices', 'renderingGroupId', 'options'],
    editableInPropertyPage: ['displayName', 'propertyType', 'groupName', 'options'],
    deviceSource: ['deviceInputSystem', 'deviceType', 'deviceSlot'],
    deviceSourceManager: ['engine'],
    internalDeviceSourceManager: ['engine'],
    nativeDeviceInputSystem: ['onDeviceConnected', 'onDeviceDisconnected', 'onInputChanged'],
    webDeviceInputSystem: ['engine', 'onDeviceConnected', 'onDeviceDisconnected', 'onInputChanged'],
    nativeDataStream: [],
    nativeHardwareTexture: ['existingTexture', 'engine'],
    getNativeAddressMode: ['wrapMode'],
    getNativeAlphaMode: ['mode'],
    getNativeAttribType: ['type'],
    getNativeSamplingMode: ['samplingMode'],
    getNativeStencilDepthFail: ['depthFail'],
    getNativeStencilDepthPass: ['opPass'],
    getNativeStencilFunc: ['func'],
    getNativeStencilOpFail: ['opFail'],
    getNativeTextureFormat: ['format', 'type'],
    nativePipelineContext: ['engine', 'isAsync', 'shaderProcessingContext'],
    nativeRenderTargetWrapper: ['isMulti', 'isCube', 'size', 'engine'],
    nativeShaderProcessingContext: [],
    nativeShaderProcessor: [],
    validatedNativeDataStream: [],
    shaderDefineArithmeticOperator: ['define', 'operand', 'testValue'],
    shaderDefineIsDefinedOperator: ['define', 'not'],
    shaderCodeCursor: [],
    shaderCodeInliner: ['sourceCode', 'numMaxIterations'],
    shaderCodeNode: [],
    finalize: ['vertexCode', 'fragmentCode', 'options'],
    initialize: ['options'],
    preProcess: ['sourceCode', 'options', 'callback', 'engine'],
    process: ['sourceCode', 'options', 'callback', 'engine'],
    _ProcessIncludes: ['sourceCode', 'options', 'callback'],
    webGL2ShaderProcessor: [],
    webGLHardwareTexture: ['existingTexture', 'context'],
    webGLPipelineContext: [],
    webGLRenderTargetWrapper: ['isMulti', 'isCube', 'size', 'engine', 'context'],
    webGLShaderProcessor: [],
    webGPUBufferManager: ['engine', 'device'],
    webGPUBundleList: ['device'],
    webGPURenderItemBeginOcclusionQuery: ['query'],
    webGPURenderItemBlendColor: ['color'],
    webGPURenderItemEndOcclusionQuery: [],
    webGPURenderItemScissor: ['x', 'y', 'w', 'h'],
    webGPURenderItemStencilRef: ['ref'],
    webGPURenderItemViewport: ['x', 'y', 'w', 'h'],
    webGPUCacheBindGroups: ['device', 'cacheSampler', 'engine'],
    webGPUCacheRenderPipeline: ['device', 'emptyVertexBuffer'],
    webGPUCacheSampler: ['device'],
    webGPUClearQuad: ['device', 'engine', 'emptyVertexBuffer'],
    webGPUComputeContext: ['device', 'cacheSampler'],
    webGPUComputePipelineContext: ['engine'],
    webGPUDepthCullingState: ['cache'],
    webGPUDrawContext: ['bufferManager'],
    webGPUExternalTexture: ['video'],
    webGPUHardwareTexture: ['_engine', 'existingTexture'],
    webGPUMaterialContext: [],
    webGPUOcclusionQuery: ['engine', 'device', 'bufferManager', 'startCount', 'incrementCount'],
    webGPUPerfCounter: [],
    webGPUPipelineContext: ['shaderProcessingContext', 'engine'],
    webGPUQuerySet: ['engine', 'count', 'type', 'device', 'bufferManager', 'canUseMultipleBuffers', 'label'],
    webGPURenderTargetWrapper: ['isMulti', 'isCube', 'size', 'engine', 'label'],
    webGPUShaderProcessingContext: ['shaderLanguage', 'pureMode'],
    webGPUShaderProcessor: [],
    webGPUShaderProcessorGLSL: [],
    webGPUShaderProcessorWGSL: [],
    webGPUSnapshotRendering: ['engine', 'renderingMode', 'bundleList'],
    webGPUStencilStateComposer: ['cache'],
    webGPUTextureManager: ['engine', 'device', 'bufferManager', 'enabledExtensions'],
    webGPUDurationMeasure: ['engine', 'device', 'bufferManager', 'count', 'querySetLabel'],
    webGPUTimestampQuery: ['engine', 'device', 'bufferManager'],
    abstractEngine: ['antialias', 'options', 'adaptToDeviceRatio'],
    queueNewFrame: ['func', 'requester'],
    engine: ['canvasOrContext', 'antialias', 'options', 'adaptToDeviceRatio'],
    acquireNativeObjectAsync: [],
    nativeEngine: ['options'],
    registerNativeTypeAsync: ['typeName', 'constructor'],
    nullEngine: ['options'],
    nullEngineOptions: [],
    renderTargetWrapper: ['isMulti', 'isCube', 'size', 'engine', 'label'],
    thinEngine: ['canvasOrContext', 'antialias', 'options', 'adaptToDeviceRatio'],
    thinWebGPUEngine: [],
    webGPUEngine: ['canvas', 'options'],
    clipboardInfo: ['type', 'event'],
    keyboardInfo: ['type', 'event'],
    keyboardInfoPre: ['type', 'event'],
    pointerInfo: ['type', 'event', 'pickInfo', 'inputManager'],
    pointerInfoBase: ['type', 'event'],
    pointerInfoPre: ['type', 'event', 'localX', 'localY'],
    flowGraphLogicAndBlock: ['config'],
    flowGraphLogicNotBlock: ['config'],
    flowGraphLogicOrBlock: ['config'],
    flowGraphAbsBlock: ['config'],
    flowGraphAcosBlock: ['config'],
    flowGraphAcoshBlock: ['config'],
    flowGraphAddBlock: ['config'],
    flowGraphAsinBlock: ['config'],
    flowGraphAsinhBlock: ['config'],
    flowGraphAtan2Block: ['config'],
    flowGraphAtanBlock: ['config'],
    flowGraphAtanhBlock: ['config'],
    flowGraphBitwiseAndBlock: ['config'],
    flowGraphBitwiseLeftShiftBlock: ['config'],
    flowGraphBitwiseNotBlock: ['config'],
    flowGraphBitwiseOrBlock: ['config'],
    flowGraphBitwiseRightShiftBlock: ['config'],
    flowGraphBitwiseXorBlock: ['config'],
    flowGraphCeilBlock: ['config'],
    flowGraphClampBlock: ['config'],
    flowGraphCosBlock: ['config'],
    flowGraphCoshBlock: ['config'],
    flowGraphCountLeadingZerosBlock: ['config'],
    flowGraphCountOneBitsBlock: ['config'],
    flowGraphCountTrailingZerosBlock: ['config'],
    flowGraphCrossBlock: ['config'],
    flowGraphCubeRootBlock: ['config'],
    flowGraphDegToRadBlock: ['config'],
    flowGraphDeterminantBlock: ['config'],
    flowGraphDivideBlock: ['config'],
    flowGraphDotBlock: ['config'],
    flowGraphEBlock: ['config'],
    flowGraphEqBlock: ['config'],
    flowGraphExpBlock: ['config'],
    flowGraphFloorBlock: ['config'],
    flowGraphFractBlock: ['config'],
    flowGraphGreaterThanBlock: ['config'],
    flowGraphGreaterThanOrEqualBlock: ['config'],
    flowGraphInfBlock: ['config'],
    flowGraphInterpolateBlock: ['config'],
    flowGraphInvertMatrixBlock: ['config'],
    flowGraphIsInfBlock: ['config'],
    flowGraphIsNanBlock: ['config'],
    flowGraphLengthBlock: ['config'],
    flowGraphLessThanBlock: ['config'],
    flowGraphLessThanOrEqualBlock: ['config'],
    flowGraphLog10Block: ['config'],
    flowGraphLog2Block: ['config'],
    flowGraphLogBlock: ['config'],
    flowGraphMatMulBlock: ['config'],
    flowGraphMaxBlock: ['config'],
    flowGraphMinBlock: ['config'],
    flowGraphMultiplyBlock: ['config'],
    flowGraphNaNBlock: ['config'],
    flowGraphNegBlock: ['config'],
    flowGraphNormalizeBlock: ['config'],
    flowGraphPiBlock: ['config'],
    flowGraphPowBlock: ['config'],
    flowGraphRadToDegBlock: ['config'],
    flowGraphRandomBlock: ['config'],
    flowGraphRemainderBlock: ['config'],
    flowGraphRotate2DBlock: ['config'],
    flowGraphRotate3DBlock: ['config'],
    flowGraphSaturateBlock: ['config'],
    flowGraphSignBlock: ['config'],
    flowGraphSinBlock: ['config'],
    flowGraphSinhBlock: ['config'],
    flowGraphSqrtBlock: ['config'],
    flowGraphSubtractBlock: ['config'],
    flowGraphTanBlock: ['config'],
    flowGraphTanhBlock: ['config'],
    flowGraphTransposeBlock: ['config'],
    flowGraphTruncBlock: ['config'],
    flowGraphBinaryOperationBlock: ['leftRichType', 'rightRichType', 'resultRichType', '_operation', '_className', 'config'],
    flowGraphCachedOperationBlock: ['outputRichType', 'config'],
    flowGraphConditionalDataBlock: ['config'],
    flowGraphConstantBlock: ['config'],
    flowGraphConstantOperationBlock: ['richType', '_operation', '_className', 'config'],
    flowGraphCoordinateTransformBlock: ['config'],
    flowGraphGetPropertyBlock: ['config'],
    flowGraphGetVariableBlock: ['config'],
    flowGraphTernaryOperationBlock: ['t1Type', 't2Type', 't3Type', 'resultRichType', '_operation', '_className', 'config'],
    flowGraphUnaryOperationBlock: ['inputRichType', 'resultRichType', '_operation', '_className', 'config'],
    flowGraphMeshPickEventBlock: ['config'],
    flowGraphReceiveCustomEventBlock: ['config'],
    flowGraphPauseAnimationBlock: ['config'],
    flowGraphPlayAnimationBlock: ['config'],
    flowGraphStopAnimationBlock: ['config'],
    flowGraphPlayAudioBlock: ['config'],
    flowGraphStopAudioBlock: ['config'],
    flowGraphBranchBlock: ['config'],
    flowGraphCounterBlock: ['config'],
    flowGraphDebounceBlock: ['config'],
    flowGraphDoNBlock: ['config'],
    flowGraphFlipFlopBlock: ['config'],
    flowGraphForLoopBlock: ['config'],
    flowGraphMultiGateBlock: ['config'],
    flowGraphSequenceBlock: ['config'],
    flowGraphSwitchBlock: ['config'],
    flowGraphThrottleBlock: ['config'],
    flowGraphTimerBlock: ['config'],
    flowGraphWaitAllBlock: ['config'],
    flowGraphWhileLoopBlock: ['config'],
    flowGraphConsoleLogBlock: ['config'],
    flowGraphSendCustomEventBlock: ['config'],
    flowGraphSetPropertyBlock: ['config'],
    flowGraphSetVariableBlock: ['config'],
    flowGraph: ['params'],
    flowGraphAsyncExecutionBlock: ['config'],
    flowGraphBlock: ['config'],
    flowGraphConnection: ['name', '_connectionType', '_ownerBlock'],
    flowGraphContext: ['params'],
    flowGraphContextLogger: ['_context'],
    flowGraphCoordinator: ['config'],
    flowGraphDataConnection: ['name', 'connectionType', 'ownerBlock', 'richType'],
    flowGraphExecutionBlock: ['config'],
    flowGraphExecutionBlockWithOutSignal: ['config'],
    flowGraphInteger: ['value'],
    flowGraphPathConverter: ['_context', '_separator'],
    flowGraphPathConverterComponent: ['path', 'ownerBlock'],
    richType: ['typeName', 'defaultValue'],
    getRichTypeFromValue: ['value'],
    defaultValueParseFunction: ['key', 'serializationObject', 'scene'],
    defaultValueSerializationFunction: ['key', 'value', 'serializationObject'],
    needsPathConverter: ['className'],
    _isADescendantOf: ['mesh1', 'mesh2'],
    nodeRenderGraphBlackAndWhitePostProcessBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraphBloomPostProcessBlock: ['name', 'frameGraph', 'scene', 'hdr', 'bloomScale'],
    nodeRenderGraphBlurPostProcessBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraphCircleOfConfusionPostProcessBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraphDepthOfFieldPostProcessBlock: ['name', 'frameGraph', 'scene', 'blurLevel', 'hdr'],
    nodeRenderGraphExtractHighlightsPostProcessBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraphBaseObjectRendererBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraphBaseShadowGeneratorBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraphCascadedShadowGeneratorBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraphCullObjectsBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraphGeometryRendererBlock: ['name', 'frameGraph', 'scene', 'doNotChangeAspectRatio'],
    nodeRenderGraphObjectRendererBlock: ['name', 'frameGraph', 'scene', 'doNotChangeAspectRatio'],
    nodeRenderGraphShadowGeneratorBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraphTAAObjectRendererBlock: ['name', 'frameGraph', 'scene', 'doNotChangeAspectRatio'],
    nodeRenderGraphTeleportInBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraphTeleportOutBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraphClearBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraphCopyTextureBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraphGenerateMipmapsBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraphElbowBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraphExecuteBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraphInputBlock: ['name', 'frameGraph', 'scene', 'type'],
    nodeRenderGraphOutputBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraphResourceContainerBlock: ['name', 'frameGraph', 'scene'],
    nodeRenderGraph: ['name', 'scene', 'options'],
    nodeRenderGraphBlock: ['name', 'frameGraph', 'scene', '_additionalConstructionParameters'],
    nodeRenderGraphConnectionPoint: ['name', 'ownerBlock', 'direction'],
    nodeRenderGraphBuildState: [],
    frameGraphCullPass: ['name', 'parentTask', 'context', 'engine'],
    frameGraphPass: ['name', '_parentTask', '_context'],
    frameGraphRenderPass: ['name', 'parentTask', 'context', 'engine'],
    frameGraphExecuteTask: ['name', 'frameGraph'],
    frameGraphBlackAndWhiteTask: ['name', 'frameGraph', 'thinPostProcess'],
    frameGraphBloomMergeTask: ['name', 'frameGraph', 'thinPostProcess'],
    frameGraphBloomTask: ['name', 'frameGraph', 'engine', 'weight', 'kernel', 'threshold', 'hdr', 'bloomScale'],
    frameGraphBlurTask: ['name', 'frameGraph', 'thinPostProcess'],
    frameGraphCircleOfConfusionTask: ['name', 'frameGraph', 'thinPostProcess'],
    frameGraphDepthOfFieldBlurTask: ['name', 'frameGraph', 'thinPostProcess'],
    frameGraphDepthOfFieldMergeTask: ['name', 'frameGraph', 'thinPostProcess'],
    frameGraphDepthOfFieldTask: ['name', 'frameGraph', 'engine', 'blurLevel', 'hdr'],
    frameGraphExtractHighlightsTask: ['name', 'frameGraph', 'thinPostProcess'],
    frameGraphPostProcessTask: ['name', 'frameGraph', 'postProcess'],
    frameGraphCascadedShadowGeneratorTask: [],
    frameGraphCullObjectsTask: ['name', 'frameGraph', 'scene'],
    frameGraphGeometryRendererTask: ['name', 'frameGraph', 'scene', 'options'],
    frameGraphObjectRendererTask: ['name', 'frameGraph', 'scene', 'options'],
    frameGraphShadowGeneratorTask: ['name', 'frameGraph', 'scene'],
    frameGraphTAAObjectRendererTask: ['name', 'frameGraph', 'scene', 'options'],
    frameGraphClearTextureTask: ['name', 'frameGraph'],
    frameGraphCopyToTextureTask: ['name', 'frameGraph'],
    frameGraphGenerateMipMapsTask: ['name', 'frameGraph'],
    frameGraph: ['engine', 'debugTextures', 'scene'],
    frameGraphRenderContext: ['_engine', '_textureManager', '_scene'],
    frameGraphRenderTarget: ['name', 'textureManager', 'renderTargets', 'renderTargetDepth'],
    frameGraphTask: ['name', 'frameGraph'],
    frameGraphTextureManager: ['engine', '_debugTextures', '_scene'],
    dualShockPad: ['id', 'index', 'gamepad'],
    gamepad: ['id', 'index', 'browserGamepad', 'leftStickX', 'leftStickY', 'rightStickX', 'rightStickY'],
    genericPad: ['id', 'index', 'browserGamepad'],
    stickValues: ['x', 'y'],
    gamepadManager: ['_scene'],
    gamepadSystemSceneComponent: ['scene'],
    xbox360Pad: ['id', 'index', 'gamepad', 'xboxOne'],
    axisDragGizmo: ['dragAxis', 'color', 'gizmoLayer', 'parent', 'thickness', 'hoverColor', 'disableColor'],
    axisScaleGizmo: ['dragAxis', 'color', 'gizmoLayer', 'parent', 'thickness', 'hoverColor', 'disableColor'],
    boundingBoxGizmo: ['color', 'gizmoLayer'],
    cameraGizmo: ['gizmoLayer', 'gizmoColor', 'frustumLinesColor'],
    gizmo: ['gizmoLayer'],
    gizmoManager: ['_scene', 'thickness', 'utilityLayer', 'keepDepthUtilityLayer'],
    lightGizmo: ['gizmoLayer'],
    planeDragGizmo: ['dragPlaneNormal', 'color', 'gizmoLayer', 'parent', 'hoverColor', 'disableColor'],
    planeRotationGizmo: ['planeNormal', 'color', 'gizmoLayer', 'tessellation', 'parent', 'useEulerRotation', 'thickness', 'hoverColor', 'disableColor'],
    positionGizmo: ['gizmoLayer', 'thickness', 'gizmoManager', 'options'],
    rotationGizmo: ['gizmoLayer', 'tessellation', 'useEulerRotation', 'thickness', 'gizmoManager', 'options'],
    scaleGizmo: ['gizmoLayer', 'thickness', 'gizmoManager', 'options'],
    environmentHelper: ['options', 'scene'],
    textureDome: ['name', 'textureUrlOrElement', 'options', 'scene', 'onError'],
    pointerPickingConfiguration: [],
    engineInstrumentation: ['engine'],
    sceneInstrumentation: ['scene'],
    _TimeToken: [],
    effectLayer: ['name', 'scene', 'forceGLSL'],
    effectLayerSceneComponent: ['scene'],
    glowLayer: ['name', 'scene', 'options'],
    highlightLayer: ['name', 'scene', 'options'],
    layer: ['name', 'imgUrl', 'scene', 'isBackground', 'color', 'forceGLSL'],
    layerSceneComponent: ['scene'],
    lensFlare: ['size', 'position', 'color', 'imgUrl', 'system'],
    lensFlareSystem: ['name', 'emitter', 'scene'],
    lensFlareSystemSceneComponent: ['scene'],
    loadIESData: ['uint8Array'],
    cascadedShadowGenerator: ['mapSize', 'light', 'usefulFloatFirst', 'camera', 'useRedTextureType'],
    shadowGenerator: ['mapSize', 'light', 'usefullFloatFirst', 'camera', 'useRedTextureType', 'forceGLSL'],
    shadowGeneratorSceneComponent: ['scene'],
    directionalLight: ['name', 'direction', 'scene'],
    hemisphericLight: ['name', 'direction', 'scene'],
    light: ['name', 'scene'],
    pointLight: ['name', 'position', 'scene'],
    shadowLight: [],
    spotLight: ['name', 'position', 'direction', 'angle', 'exponent', 'scene'],
    defaultLoadingScreen: ['_renderingCanvas', '_loadingText', '_loadingDivBackgroundColor'],
    appendSceneAsync: ['source', 'scene', 'options'],
    importAnimationsAsync: ['source', 'scene', 'options'],
    loadAssetContainerAsync: ['source', 'scene', 'options'],
    loadSceneAsync: ['source', 'engine', 'options'],
    registerSceneLoaderPlugin: ['plugin'],
    backgroundMaterial: ['name', 'scene', 'forceGLSL'],
    gaussianSplattingMaterial: ['name', 'scene'],
    greasedLinePluginMaterial: ['material', 'scene', 'options'],
    materialGreasedLineDefines: [],
    getCustomCode: ['shaderType', 'cameraFacing'],
    greasedLineSimpleMaterial: ['name', 'scene', 'options'],
    clipPlanesBlock: ['name'],
    currentScreenBlock: ['name'],
    fogBlock: ['name'],
    imageSourceBlock: ['name'],
    lightBlock: ['name'],
    reflectionTextureBaseBlock: ['name'],
    reflectionTextureBlock: ['name'],
    sceneDepthBlock: ['name'],
    textureBlock: ['name', 'fragmentOnly'],
    tBNBlock: ['name'],
    derivativeBlock: ['name'],
    discardBlock: ['name'],
    fragCoordBlock: ['name'],
    fragDepthBlock: ['name'],
    fragmentOutputBlock: ['name'],
    frontFacingBlock: ['name'],
    heightToNormalBlock: ['name'],
    imageProcessingBlock: ['name'],
    perturbNormalBlock: ['name'],
    prePassOutputBlock: ['name'],
    screenSizeBlock: ['name'],
    screenSpaceBlock: ['name'],
    shadowMapBlock: ['name'],
    twirlBlock: ['name'],
    gaussianBlock: ['name'],
    gaussianSplattingBlock: ['name'],
    splatReaderBlock: ['name'],
    inputBlock: ['name', 'target', 'type'],
    prePassTextureBlock: ['name', 'target'],
    anisotropyBlock: ['name'],
    clearCoatBlock: ['name'],
    iridescenceBlock: ['name'],
    pBRMetallicRoughnessBlock: ['name'],
    reflectionBlock: ['name'],
    refractionBlock: ['name'],
    sheenBlock: ['name'],
    subSurfaceBlock: ['name'],
    particleBlendMultiplyBlock: ['name'],
    particleRampGradientBlock: ['name'],
    particleTextureBlock: ['name'],
    nodeMaterialTeleportInBlock: ['name'],
    nodeMaterialTeleportOutBlock: ['name'],
    bonesBlock: ['name'],
    instancesBlock: ['name'],
    lightInformationBlock: ['name'],
    morphTargetsBlock: ['name'],
    vertexOutputBlock: ['name'],
    addBlock: ['name'],
    arcTan2Block: ['name'],
    baseMathBlock: ['name'],
    biPlanarBlock: ['name'],
    clampBlock: ['name'],
    cloudBlock: ['name'],
    colorConverterBlock: ['name'],
    colorMergerBlock: ['name'],
    colorSplitterBlock: ['name'],
    conditionalBlock: ['name'],
    crossBlock: ['name'],
    curveBlock: ['name'],
    customBlock: ['name'],
    desaturateBlock: ['name'],
    distanceBlock: ['name'],
    divideBlock: ['name'],
    dotBlock: ['name'],
    elbowBlock: ['name'],
    fresnelBlock: ['name'],
    gradientBlock: ['name'],
    gradientBlockColorStep: ['step', 'color'],
    lengthBlock: ['name'],
    lerpBlock: ['name'],
    loopBlock: ['name'],
    matrixBuilderBlock: ['name'],
    matrixDeterminantBlock: ['name'],
    matrixSplitterBlock: ['name'],
    matrixTransposeBlock: ['name'],
    maxBlock: ['name'],
    meshAttributeExistsBlock: ['name'],
    minBlock: ['name'],
    modBlock: ['name'],
    multiplyBlock: ['name'],
    nLerpBlock: ['name'],
    negateBlock: ['name'],
    normalBlendBlock: ['name'],
    normalizeBlock: ['name'],
    oneMinusBlock: ['name'],
    posterizeBlock: ['name'],
    powBlock: ['name'],
    randomNumberBlock: ['name'],
    reciprocalBlock: ['name'],
    reflectBlock: ['name'],
    refractBlock: ['name'],
    remapBlock: ['name'],
    replaceColorBlock: ['name'],
    rotate2dBlock: ['name'],
    scaleBlock: ['name'],
    simplexPerlin3DBlock: ['name'],
    smoothStepBlock: ['name'],
    stepBlock: ['name'],
    storageReadBlock: ['name'],
    storageWriteBlock: ['name'],
    subtractBlock: ['name'],
    transformBlock: ['name'],
    triPlanarBlock: ['name', 'hideSourceZ'],
    trigonometryBlock: ['name'],
    vectorMergerBlock: ['name'],
    vectorSplitterBlock: ['name'],
    viewDirectionBlock: ['name'],
    voronoiNoiseBlock: ['name'],
    waveBlock: ['name'],
    worleyNoise3DBlock: ['name'],
    nodeMaterial: ['name', 'scene', 'options'],
    nodeMaterialDefines: [],
    nodeMaterialBlock: ['name', 'target', 'isFinalMerger'],
    nodeMaterialConnectionPoint: ['name', 'ownerBlock', 'direction'],
    nodeMaterialBuildState: [],
    nodeMaterialBuildStateSharedData: [],
    nodeMaterialConnectionPointCustomObject: ['name', 'ownerBlock', 'direction', '_blockType', '_blockName'],
    setToDefaultGaussianSplatting: ['nodeMaterial'],
    occlusionMaterial: ['name', 'scene'],
    materialAnisotropicDefines: [],
    pBRAnisotropicConfiguration: ['material', 'addToPluginList'],
    materialBRDFDefines: [],
    pBRBRDFConfiguration: ['material', 'addToPluginList'],
    pBRBaseMaterial: ['name', 'scene', 'forceGLSL'],
    pBRMaterialDefines: ['externalProperties'],
    pBRBaseSimpleMaterial: ['name', 'scene'],
    materialClearCoatDefines: [],
    pBRClearCoatConfiguration: ['material', 'addToPluginList'],
    materialIridescenceDefines: [],
    pBRIridescenceConfiguration: ['material', 'addToPluginList'],
    pBRMaterial: ['name', 'scene', 'forceGLSL'],
    pBRMetallicRoughnessMaterial: ['name', 'scene'],
    materialSheenDefines: [],
    pBRSheenConfiguration: ['material', 'addToPluginList'],
    pBRSpecularGlossinessMaterial: ['name', 'scene'],
    materialSubSurfaceDefines: [],
    pBRSubSurfaceConfiguration: ['material', 'addToPluginList'],
    hDRFiltering: ['engine', 'options'],
    _BasisTextureLoader: [],
    _DDSTextureLoader: [],
    _ENVTextureLoader: [],
    _ExrTextureLoader: [],
    _HDRTextureLoader: [],
    _IESTextureLoader: [],
    _KTXTextureLoader: [],
    _GetCompatibleTextureLoader: ['extension', 'mimeType'],
    registerTextureLoader: ['extension', 'loaderFactory'],
    unregisterTextureLoader: ['extension'],
    _TGATextureLoader: [],
    multiviewRenderTarget: ['scene', 'size'],
    texturePackerFrame: ['id', 'scale', 'offset'],
    texturePacker: ['name', 'meshes', 'options', 'scene'],
    customProceduralTexture: ['name', 'texturePath', 'size', 'scene', 'fallbackTexture', 'generateMipMaps', 'skipJson'],
    noiseProceduralTexture: ['name', 'size', 'scene', 'fallbackTexture', 'generateMipMaps'],
    proceduralTexture: ['name', 'size', 'fragment', 'scene', 'fallbackTexture', 'generateMipMaps', 'isCube', 'textureType'],
    proceduralTextureSceneComponent: ['scene'],
    baseTexture: ['sceneOrEngine', 'internalTexture'],
    colorGradingTexture: ['url', 'sceneOrEngine', 'onLoad'],
    cubeTexture: [
        'rootUrl',
        'sceneOrEngine',
        'extensionsOrOptions',
        'noMipmap',
        'files',
        'onLoad',
        'onError',
        'format',
        'prefiltered',
        'forcedExtension',
        'createPolynomials',
        'lodScale',
        'lodOffset',
        'loaderOptions',
        'useSRGBBuffer',
    ],
    dynamicTexture: ['name', 'canvasOrSize', 'sceneOrOptions', 'generateMipMaps', 'samplingMode', 'format', 'invertY'],
    equiRectangularCubeTexture: ['url', 'scene', 'size', 'noMipmap', 'gammaSpace', 'onLoad', 'onError', 'supersample'],
    externalTexture: ['video'],
    hDRCubeTexture: ['url', 'sceneOrEngine', 'size', 'noMipmap', 'generateHarmonics', 'gammaSpace', 'prefilterOnLoad', 'onLoad', 'onError', 'supersample'],
    htmlElementTexture: ['name', 'element', 'options'],
    getTypeForDepthTexture: ['format'],
    hasStencilAspect: ['format'],
    internalTexture: ['engine', 'source', 'delayAllocation'],
    isDepthTexture: ['format'],
    mirrorTexture: ['name', 'size', 'scene', 'generateMipMaps', 'type', 'samplingMode', 'generateDepthBuffer'],
    multiRenderTarget: ['name', 'size', 'count', 'scene', 'options', 'textureNames'],
    prePassRenderTarget: ['name', 'renderTargetTexture', 'size', 'count', 'scene', 'options'],
    rawCubeTexture: ['scene', 'data', 'size', 'format', 'type', 'generateMipMaps', 'invertY', 'samplingMode', 'compression'],
    rawTexture: ['data', 'width', 'height', 'format', 'sceneOrEngine', 'generateMipMaps', 'invertY', 'samplingMode', 'type', 'creationFlags', 'useSRGBBuffer'],
    rawTexture2DArray: ['data', 'width', 'height', 'depth', 'format', 'scene', 'generateMipMaps', 'invertY', 'samplingMode', 'textureType', 'creationFlags'],
    rawTexture3D: ['data', 'width', 'height', 'depth', 'format', 'scene', 'generateMipMaps', 'invertY', 'samplingMode', 'textureType', 'creationFlags'],
    refractionTexture: ['name', 'size', 'scene', 'generateMipMaps'],
    renderTargetTexture: [
        'name',
        'size',
        'scene',
        'generateMipMaps',
        'doNotChangeAspectRatio',
        'type',
        'isCube',
        'samplingMode',
        'generateDepthBuffer',
        'generateStencilBuffer',
        'isMulti',
        'format',
        'delayAllocation',
        'samples',
        'creationFlags',
        'noColorAttachment',
        'useSRGBBuffer',
    ],
    texture: [
        'url',
        'sceneOrEngine',
        'noMipmapOrOptions',
        'invertY',
        'samplingMode',
        'onLoad',
        'onError',
        'buffer',
        'deleteBuffer',
        'format',
        'mimeType',
        'loaderOptions',
        'creationFlags',
        'forcedExtension',
    ],
    getDimensionsFromTextureSize: ['size'],
    textureSizeIsObject: ['size'],
    textureSampler: [],
    thinRenderTargetTexture: ['engine', 'size', 'options'],
    thinTexture: ['internalTexture'],
    videoTexture: ['name', 'src', 'scene', 'generateMipMaps', 'invertY', 'samplingMode', 'settings', 'onError', 'format'],
    addClipPlaneUniforms: ['uniforms'],
    bindClipPlane: ['effect', 'primaryHolder', 'secondaryHolder'],
    prepareDefinesForClipPlanes: ['primaryHolder', 'secondaryHolder', 'defines'],
    prepareStringDefinesForClipPlanes: ['primaryHolder', 'secondaryHolder', 'defines'],
    colorCurves: [],
    drawWrapper: ['engine', 'createMaterialContext'],
    effect: [
        'baseName',
        'attributesNamesOrOptions',
        'uniformsNamesOrEngine',
        'samplers',
        'engine',
        'defines',
        'fallbacks',
        'onCompiled',
        'onError',
        'indexParameters',
        'key',
        'shaderLanguage',
        'extraInitializationsAsync',
    ],
    effectFallbacks: [],
    effectRenderer: ['engine', 'options'],
    effectWrapper: ['creationOptions'],
    fresnelParameters: ['options'],
    imageProcessingConfiguration: [],
    material: ['name', 'scene', 'doNotAdd', 'forceGLSL'],
    materialDefines: ['externalProperties'],
    materialPluginBase: ['material', 'name', 'priority', 'defines', 'addToPluginList', 'enable', 'resolveIncludes'],
    createDetailMapPlugin: ['material'],
    createPBRAnisotropicPlugin: ['material'],
    createPBRBRDFPlugin: ['material'],
    createPBRClearCoatPlugin: ['material'],
    createPBRIridescencePlugin: ['material'],
    createPBRSheenPlugin: ['material'],
    createPBRSubSurfacePlugin: ['material'],
    materialPluginManager: ['material'],
    registerMaterialPlugin: ['pluginName', 'factory'],
    unregisterAllMaterialPlugins: [],
    unregisterMaterialPlugin: ['pluginName'],
    materialStencilState: [],
    meshDebugPluginMaterial: ['material', 'options'],
    multiMaterial: ['name', 'scene'],
    prePassConfiguration: [],
    pushMaterial: ['name', 'scene', 'storeEffectOnSubMeshes', 'forceGLSL'],
    shaderMaterial: ['name', 'scene', 'shaderPath', 'options', 'storeEffectOnSubMeshes'],
    shadowDepthWrapper: ['baseMaterial', 'scene', 'options'],
    standardMaterial: ['name', 'scene', 'forceGLSL'],
    standardMaterialDefines: ['externalProperties'],
    uniformBuffer: ['engine', 'data', 'dynamic', 'name', 'forceNoUniformBuffer'],
    uniformBufferEffectCommonAccessor: ['uboOrEffect'],
    halton2DSequence: ['numSamples', 'baseX', 'baseY', 'width', 'height'],
    angle: ['radians'],
    arc2: ['startPoint', 'midPoint', 'endPoint'],
    color3: ['r', 'g', 'b'],
    color4: ['r', 'g', 'b', 'a'],
    curve3: ['points'],
    matrix: [],
    path2: ['x', 'y'],
    path3D: ['path', 'firstNormal', 'raw', 'alignTangentsWithPath'],
    plane: ['a', 'b', 'c', 'd'],
    positionNormalTextureVertex: ['position', 'normal', 'uv'],
    positionNormalVertex: ['position', 'normal'],
    quaternion: ['x', 'y', 'z', 'w'],
    size: ['width', 'height'],
    vector2: ['x', 'y'],
    vector3: ['x', 'y', 'z'],
    vector4: ['x', 'y', 'z', 'w'],
    viewport: ['x', 'y', 'width', 'height'],
    sphericalHarmonics: [],
    sphericalPolynomial: [],
    box: ['name', 'options', 'scene'],
    boxVertexData: ['options'],
    segmentedBoxVertexData: ['options'],
    capsule: ['name', 'options', 'scene'],
    capsuleVertexData: ['options'],
    cylinder: ['name', 'options', 'scene'],
    cylinderVertexData: ['options'],
    decal: ['name', 'sourceMesh', 'options'],
    disc: ['name', 'options', 'scene'],
    discVertexData: ['options'],
    geodesic: ['name', 'options', 'scene'],
    goldberg: ['name', 'options', 'scene'],
    goldbergVertexData: ['options', 'goldbergData'],
    completeGreasedLineColorTable: ['pointCount', 'colors', 'colorDistribution', 'defaultColor'],
    completeGreasedLineWidthTable: ['pointCount', 'widths', 'widthsDistribution', 'defaultWidthUpper', 'defaultWidthLower'],
    greasedLine: ['name', 'options', 'materialOptions', 'scene'],
    greasedLineMaterial: ['name', 'options', 'scene'],
    getPointsCount: ['allPoints'],
    ground: ['name', 'options', 'scene'],
    groundFromHeightMap: ['name', 'url', 'options', 'scene'],
    groundFromHeightMapVertexData: ['options'],
    groundVertexData: ['options'],
    tiledGround: ['name', 'options', 'scene'],
    tiledGroundVertexData: ['options'],
    hemisphere: ['name', 'options', 'scene'],
    icoSphere: ['name', 'options', 'scene'],
    icoSphereVertexData: ['options'],
    lathe: ['name', 'options', 'scene'],
    dashedLines: ['name', 'options', 'scene'],
    dashedLinesVertexData: ['options'],
    lineSystem: ['name', 'options', 'scene'],
    lineSystemVertexData: ['options'],
    lines: ['name', 'options', 'scene'],
    planeVertexData: ['options'],
    polygon3D: ['name', 'options', 'scene', 'earcutInjection'],
    polygonVertexData: ['polygon', 'sideOrientation', 'fUV', 'fColors', 'frontUVs', 'backUVs', 'wrp'],
    extrudePolygon: ['name', 'options', 'scene', 'earcutInjection'],
    polyhedron: ['name', 'options', 'scene'],
    polyhedronVertexData: ['options'],
    ribbon: ['name', 'options', 'scene'],
    ribbonVertexData: ['options'],
    extrudeShape: ['name', 'options', 'scene'],
    extrudeShapeCustom: ['name', 'options', 'scene'],
    sphere: ['name', 'options', 'scene'],
    sphereVertexData: ['options'],
    text3D: ['name', 'text', 'fontData', 'options', 'scene', 'earcutInjection'],
    textShapePaths: ['text', 'size', 'resolution', 'fontData'],
    tiledBox: ['name', 'options', 'scene'],
    tiledBoxVertexData: ['options'],
    tiledPlane: ['name', 'options', 'scene'],
    tiledPlaneVertexData: ['options'],
    torus: ['name', 'options', 'scene'],
    torusVertexData: ['options'],
    torusKnot: ['name', 'options', 'scene'],
    torusKnotVertexData: ['options'],
    tube: ['name', 'options', 'scene'],
    dracoCodec: ['configuration'],
    _GetDefaultNumWorkers: [],
    _IsConfigurationAvailable: ['config'],
    dracoCompression: ['numWorkersOrOptions'],
    decodeMesh: ['decoderModule', 'data', 'attributes', 'onIndicesData', 'onAttributeData'],
    initializeWebWorker: ['worker', 'decoderWasmBinary', 'moduleUrl'],
    workerFunction: [],
    dracoDecoder: ['configuration'],
    meshoptCompression: [],
    gaussianSplattingMesh: ['name', 'url', 'scene', 'keepInRam'],
    greasedLineBaseMesh: ['name', 'scene', '_options'],
    greasedLineMesh: ['name', 'scene', '_options'],
    greasedLineRibbonMesh: ['name', 'scene', '_options', '_pathOptions'],
    instantiateBaseBlock: ['name'],
    instantiateBlock: ['name'],
    instantiateLinearBlock: ['name'],
    instantiateOnFacesBlock: ['name'],
    instantiateOnVerticesBlock: ['name'],
    instantiateOnVolumeBlock: ['name'],
    instantiateRadialBlock: ['name'],
    alignBlock: ['name'],
    rotationXBlock: ['name'],
    rotationYBlock: ['name'],
    rotationZBlock: ['name'],
    scalingBlock: ['name'],
    translationBlock: ['name'],
    aggregatorBlock: ['name'],
    latticeBlock: ['name'],
    setColorsBlock: ['name'],
    setMaterialIDBlock: ['name'],
    setNormalsBlock: ['name'],
    setPositionsBlock: ['name'],
    setTangentsBlock: ['name'],
    setUVsBlock: ['name'],
    boxBlock: ['name'],
    capsuleBlock: ['name'],
    cylinderBlock: ['name'],
    discBlock: ['name'],
    gridBlock: ['name'],
    icoSphereBlock: ['name'],
    meshBlock: ['name'],
    nullBlock: ['name'],
    planeBlock: ['name'],
    sphereBlock: ['name'],
    torusBlock: ['name'],
    teleportInBlock: ['name'],
    teleportOutBlock: ['name'],
    geometryTextureBlock: ['name'],
    geometryTextureFetchBlock: ['name'],
    booleanGeometryBlock: ['name'],
    boundingBlock: ['name'],
    cleanGeometryBlock: ['name'],
    computeNormalsBlock: ['name'],
    conditionBlock: ['name'],
    debugBlock: ['name'],
    geometryArcTan2Block: ['name'],
    geometryClampBlock: ['name'],
    geometryCollectionBlock: ['name'],
    geometryCrossBlock: ['name'],
    geometryCurveBlock: ['name'],
    geometryDesaturateBlock: ['name'],
    geometryDistanceBlock: ['name'],
    geometryDotBlock: ['name'],
    geometryElbowBlock: ['name'],
    geometryInfoBlock: ['name'],
    geometryInputBlock: ['name', 'type'],
    geometryInterceptorBlock: ['name'],
    geometryLengthBlock: ['name'],
    geometryLerpBlock: ['name'],
    geometryModBlock: ['name'],
    geometryNLerpBlock: ['name'],
    geometryOptimizeBlock: ['name'],
    geometryOutputBlock: ['name'],
    geometryPosterizeBlock: ['name'],
    geometryPowBlock: ['name'],
    geometryReplaceColorBlock: ['name'],
    geometryRotate2dBlock: ['name'],
    geometrySmoothStepBlock: ['name'],
    geometryStepBlock: ['name'],
    geometryTransformBlock: ['name'],
    geometryTrigonometryBlock: ['name'],
    intFloatConverterBlock: ['name'],
    mapRangeBlock: ['name'],
    mappingBlock: ['name'],
    mathBlock: ['name'],
    matrixComposeBlock: ['name'],
    mergeGeometryBlock: ['name'],
    noiseBlock: ['name'],
    normalizeVectorBlock: ['name'],
    randomBlock: ['name'],
    vectorConverterBlock: ['name'],
    nodeGeometry: ['name'],
    nodeGeometryBlock: ['name'],
    nodeGeometryConnectionPoint: ['name', 'ownerBlock', 'direction'],
    nodeGeometryBuildState: [],
    webGLDataBuffer: ['resource'],
    webGPUDataBuffer: ['resource', 'capacity'],
    abstractMesh: ['name', 'scene'],
    cSG: [],
    cSG2: ['manifold', 'numProp', 'vertexStructure'],
    initializeCSG2Async: ['options'],
    isCSG2Ready: [],
    polyhedronData: ['name', 'category', 'vertex', 'face'],
    _PrimaryIsoTriangle: [],
    geometry: ['id', 'scene', 'vertexData', 'updatable', 'mesh'],
    goldbergMesh: [],
    groundMesh: ['name', 'scene'],
    instancedMesh: ['name', 'source'],
    lattice: ['options'],
    instancedLinesMesh: ['name', 'source'],
    linesMesh: ['name', 'scene', 'parent', 'source', 'doNotCloneChildren', 'useVertexColor', 'useVertexAlpha', 'material'],
    mesh: ['name', 'scene', 'parent', 'source', 'doNotCloneChildren', 'clonePhysicsImpostor'],
    _InstancesBatch: [],
    meshLODLevel: ['distanceOrScreenCoverage', 'mesh'],
    quadraticErrorSimplification: ['_mesh'],
    simplificationQueue: [],
    simplificationSettings: ['quality', 'distance', 'optimizeMesh'],
    simplicationQueueSceneComponent: ['scene'],
    meshUVSpaceRenderer: ['mesh', 'scene', 'options'],
    computeMaxExtents: ['meshes', 'animationGroup', 'animationStep'],
    polygonMeshBuilder: ['name', 'contours', 'scene', 'earcutInjection'],
    subMesh: ['materialIndex', 'verticesStart', 'verticesCount', 'indexStart', 'indexCount', 'mesh', 'renderingMesh', 'createBoundingBox', 'addToMesh'],
    trailMesh: ['name', 'generator', 'scene', 'diameterOrOptions', 'length', 'autoStart'],
    transformNode: ['name', 'scene', 'isPure'],
    getCubeMapTextureData: ['buffer', 'size', 'supersample'],
    rGBE_ReadHeader: ['uint8array'],
    rGBE_ReadPixels: ['uint8array', 'hdrInfo'],
    dynamicFloat32Array: ['itemCapacity'],
    performanceViewerCollector: ['_scene', '_enabledStrategyCallbacks'],
    buildArray: ['size', 'itemBuilder'],
    buildTuple: ['size', 'itemBuilder'],
    _ObserveArray: ['array', 'callback'],
    abstractAssetTask: ['name'],
    animationAssetTask: ['name', 'rootUrl', 'filename', 'targetConverter', 'extension'],
    assetsManager: ['scene'],
    assetsProgressEvent: ['remainingCount', 'totalCount', 'task'],
    binaryFileAssetTask: ['name', 'url'],
    containerAssetTask: ['name', 'meshesNames', 'rootUrl', 'sceneFilename', 'extension'],
    cubeTextureAssetTask: ['name', 'url', 'extensions', 'noMipmap', 'files', 'prefiltered'],
    equiRectangularCubeTextureAssetTask: ['name', 'url', 'size', 'noMipmap', 'gammaSpace'],
    hDRCubeTextureAssetTask: ['name', 'url', 'size', 'noMipmap', 'generateHarmonics', 'gammaSpace', 'reserved'],
    imageAssetTask: ['name', 'url'],
    meshAssetTask: ['name', 'meshesNames', 'rootUrl', 'sceneFilename', 'extension'],
    textFileAssetTask: ['name', 'url'],
    textureAssetTask: ['name', 'url', 'noMipmap', 'invertY', 'samplingMode'],
    asyncLock: [],
    getInternalFormatFromBasisFormat: [],
    loadTextureFromTranscodeResult: [],
    setBasisTranscoderWorker: [],
    transcodeAsync: [],
    bitArray: ['size'],
    getEnvironmentBRDFTexture: [],
    escapeRegExp: ['s'],
    extractBetweenMarkers: ['markerOpen', 'markerClose', 'block', 'startIndex'],
    findBackward: ['s', 'index', 'c', 'c2'],
    injectStartingAndEndingCode: ['code', 'mainFuncDecl', 'startingCode', 'endingCode'],
    isIdentifierChar: ['c'],
    removeComments: ['block'],
    skipWhitespaces: ['s', 'index'],
    copyTextureToTexture: ['engine', 'isDepthTexture'],
    generateBase64StringFromPixelData: ['pixels', 'size', 'invertY'],
    generateBase64StringFromTexture: ['texture', 'faceIndex', 'level'],
    generateBase64StringFromTextureAsync: ['texture', 'faceIndex', 'level'],
    createYieldingScheduler: ['yieldAfterMS'],
    inlineScheduler: ['coroutine', 'onStep', 'onError'],
    makeAsyncFunction: ['coroutineFactory', 'scheduler', 'abortSignal'],
    makeSyncFunction: ['coroutineFactory', 'abortSignal'],
    runCoroutine: ['coroutine', 'scheduler', 'onSuccess', 'onError', 'abortSignal'],
    runCoroutineAsync: ['coroutine', 'scheduler', 'abortSignal'],
    runCoroutineSync: ['coroutine', 'abortSignal'],
    dataReader: ['buffer'],
    expandToProperty: ['callback', 'targetKey'],
    nativeOverride: ['target', 'propertyKey', 'descriptor', 'predicate'],
    serialize: ['sourceName'],
    serializeAsCameraReference: ['sourceName'],
    serializeAsColor3: ['sourceName'],
    serializeAsColor4: ['sourceName'],
    serializeAsColorCurves: ['sourceName'],
    serializeAsFresnelParameters: ['sourceName'],
    serializeAsImageProcessingConfiguration: ['sourceName'],
    serializeAsMatrix: ['sourceName'],
    serializeAsMeshReference: ['sourceName'],
    serializeAsQuaternion: ['sourceName'],
    serializeAsTexture: ['sourceName'],
    serializeAsVector2: ['sourceName'],
    serializeAsVector3: ['sourceName'],
    deepMerge: ['objects'],
    deferred: [],
    depthReducer: ['camera'],
    _WarnImport: ['name', 'warnOnce'],
    getDOMTextContent: ['element'],
    isDocumentAvailable: [],
    isNavigatorAvailable: [],
    isWindowObjectExist: [],
    dispose: [],
    dumpData: ['width', 'height', 'data', 'successCallback', 'mimeType', 'fileName', 'invertY', 'toArrayBuffer', 'quality'],
    dumpDataAsync: ['width', 'height', 'data', 'mimeType', 'fileName', 'invertY', 'toArrayBuffer', 'quality'],
    dumpFramebuffer: ['width', 'height', 'engine', 'successCallback', 'mimeType', 'fileName', 'quality'],
    envTextureAsync: ['texture', 'options'],
    imageDataArrayBufferViews: ['data', 'info'],
    getEnvInfo: ['data'],
    uploadEnvLevelsAsync: ['texture', 'data', 'info'],
    uploadEnvSpherical: ['texture', 'info'],
    uploadLevelsAsync: ['texture', 'imageData', 'imageType'],
    _UpdateRGBDAsync: ['internalTexture', 'data', 'sphericalPolynomial', 'lodScale', 'lodOffset'],
    normalizeEnvInfo: ['info'],
    captureEquirectangularFromScene: ['scene', 'options'],
    runtimeError: ['message', 'errorCode', 'innerError'],
    decodeBase64UrlToBinary: ['uri'],
    decodeBase64UrlToString: [],
    isBase64DataUrl: [],
    isFileURL: [],
    loadFile: [],
    loadFileError: ['message', 'object'],
    loadImage: [],
    readFile: [],
    readFileError: ['message', 'file'],
    requestFile: [],
    requestFileError: ['message', 'request'],
    setCorsBehavior: [],
    testBase64DataUrl: [],
    _injectLTSFileTools: [],
    filesInput: [
        'engine',
        'scene',
        'sceneLoadedCallback',
        'progressCallback',
        'additionalRenderLoopLogicCallback',
        'textureLoadingCallback',
        'startingProcessingFilesCallback',
        'onReloadCallback',
        'errorCallback',
        'useAppend',
        'dontInjectRenderLoop',
    ],
    color3Gradient: ['gradient', 'color'],
    colorGradient: ['gradient', 'color1', 'color2'],
    factorGradient: ['gradient', 'factor1', 'factor2'],
    randomGUID: [],
    khronosTextureContainer: ['data', 'facesExpected'],
    defaultKTX2DecoderOptions: [],
    khronosTextureContainer2: ['engine', 'numWorkersOrOptions'],
    applyConfig: ['urls', 'binariesAndModulesContainer'],
    meshExploder: ['meshes', 'centerMesh'],
    minMaxReducer: ['camera'],
    eventState: ['mask', 'skipNextObservers', 'target', 'currentTarget'],
    observable: ['onObserverAdded', 'notifyIfTriggered'],
    observer: ['callback', 'mask', 'scope'],
    perfCounter: [],
    performanceMonitor: ['frameSampleSize'],
    rollingAverage: ['length'],
    pressureObserverWrapper: ['options'],
    reflector: ['scene', 'hostname', 'port'],
    hardwareScalingOptimization: ['priority', 'maximumScale', 'step'],
    mergeMeshesOptimization: [],
    sceneOptimization: ['priority'],
    sceneOptimizer: ['scene', 'options', 'autoGeneratePriorities', 'improvementMode'],
    sceneOptimizerOptions: ['targetFrameRate', 'trackerDuration'],
    textureOptimization: ['priority', 'maximumSize', 'step'],
    sceneRecorder: [],
    screenshot: ['engine', 'camera', 'size', 'successCallback', 'mimeType', 'forceDownload', 'quality', 'useFill'],
    screenshotAsync: ['engine', 'camera', 'size', 'mimeType', 'quality', 'useFill'],
    screenshotUsingRenderTarget: [
        'engine',
        'camera',
        'size',
        'successCallback',
        'mimeType',
        'samples',
        'antialiasing',
        'fileName',
        'renderSprites',
        'enableStencilBuffer',
        'useLayerMask',
        'quality',
        'customizeTexture',
    ],
    screenshotUsingRenderTargetAsync: [
        'engine',
        'camera',
        'size',
        'mimeType',
        'samples',
        'antialiasing',
        'fileName',
        'renderSprites',
        'enableStencilBuffer',
        'useLayerMask',
        'quality',
        'customizeTexture',
    ],
    screenshotWithResizeAsync: ['engine', 'camera', 'width', 'height', 'mimeType', 'quality', 'useFill'],
    smartArray: ['capacity'],
    smartArrayNoDuplicate: [],
    snapshotRenderingHelper: ['scene', 'options'],
    stringDictionary: [],
    decode: [],
    decodeBase64ToBinary: [],
    decodeBase64ToString: [],
    encodeArrayBufferToBase64: [],
    endsWith: [],
    padNumber: [],
    startsWith: [],
    applyPostProcess: ['postProcessName', 'internalTexture', 'scene', 'type', 'samplingMode', 'format', 'width', 'height'],
    resizedCopy: ['texture', 'width', 'height', 'useBilinearMode'],
    fromHalfFloat: ['value'],
    getTextureDataAsync: ['texture', 'width', 'height', 'face', 'lod'],
    toHalfFloat: ['value'],
    getTGAHeader: ['data'],
    uploadContent: ['texture', 'data'],
    advancedTimer: ['options'],
    setAndStartTimer: ['options'],
    _retryWithInterval: [],
    asyncLoop: ['iterations', 'func', 'successCallback', 'offset'],
    className: ['name', 'module'],
    trajectory: ['segmentLength'],
    trajectoryClassifier: [],
    getClass: ['fqdn'],
    getClassName: ['obj'],
    registerClass: ['className', 'type'],
    videoRecorder: ['engine', 'options'],
    virtualJoystick: ['leftJoystick', 'customizations'],
    webRequest: [],
    autoReleaseWorkerPool: ['maxWorkers', 'createWorkerAsync', 'options'],
    workerPool: ['workers'],
    morphTarget: ['name', 'influence', 'scene'],
    morphTargetManager: ['scene'],
    recastJSCrowd: ['plugin', 'maxAgents', 'maxAgentRadius', 'scene'],
    recastJSPlugin: ['recastInjection'],
    database: ['urlToScene', 'callbackManifestChecked', 'disableManifestCheck'],
    boxParticleEmitter: [],
    coneDirectedParticleEmitter: ['radius', 'angle', 'direction1', 'direction2'],
    coneParticleEmitter: ['radius', 'angle', 'directionRandomizer'],
    customParticleEmitter: [],
    cylinderDirectedParticleEmitter: ['radius', 'height', 'radiusRange', 'direction1', 'direction2'],
    cylinderParticleEmitter: ['radius', 'height', 'radiusRange', 'directionRandomizer'],
    hemisphericParticleEmitter: ['radius', 'radiusRange', 'directionRandomizer'],
    meshParticleEmitter: ['mesh'],
    pointParticleEmitter: [],
    sphereDirectedParticleEmitter: ['radius', 'direction1', 'direction2'],
    sphereParticleEmitter: ['radius', 'radiusRange', 'directionRandomizer'],
    baseParticleSystem: ['name'],
    cloudPoint: ['particleIndex', 'group', 'groupId', 'idxInGroup', 'pcs'],
    pointsGroup: ['id', 'posFunction'],
    computeShaderParticleSystem: ['parent', 'engine'],
    gPUParticleSystem: ['name', 'options', 'sceneOrEngine', 'customEffect', 'isAnimationSheetEnabled'],
    particle: ['particleSystem'],
    particleSystem: [],
    particleSystemSet: [],
    pointsCloudSystem: ['name', 'pointSize', 'scene', 'options'],
    depthSortedParticle: ['idx', 'ind', 'indLength', 'materialIndex'],
    modelShape: ['id', 'shape', 'indices', 'normals', 'colors', 'shapeUV', 'posFunction', 'vtxFunction', 'material'],
    solidParticle: ['particleIndex', 'particleId', 'positionIndex', 'indiceIndex', 'model', 'shapeId', 'idxInShape', 'sps', 'modelBoundingInfo', 'materialIndex'],
    solidParticleVertex: [],
    solidParticleSystem: ['name', 'scene', 'options'],
    subEmitter: ['particleSystem'],
    thinParticleSystem: ['name', 'capacity', 'sceneOrEngine', 'customEffect', 'isAnimationSheetEnabled', 'epsilon'],
    webGL2ParticleSystem: ['parent', 'engine'],
    ammoJSPlugin: ['_useDeltaForWorldStep', 'ammoInjection', 'overlappingPairCache'],
    cannonJSPlugin: ['_useDeltaForWorldStep', 'iterations', 'cannonInjection'],
    oimoJSPlugin: ['_useDeltaForWorldStep', 'iterations', 'oimoInjection'],
    castingResult: [],
    physicsEngineSceneComponent: ['scene'],
    physicsEngine: ['gravity', '_physicsPlugin'],
    physicsHelper: ['scene'],
    physicsRadialExplosionEventOptions: [],
    physicsUpdraftEventOptions: [],
    physicsVortexEventOptions: [],
    physicsImpostor: ['object', 'type', '_options', '_scene'],
    distanceJoint: ['jointData'],
    hinge2Joint: ['jointData'],
    hingeJoint: ['jointData'],
    motorEnabledJoint: ['type', 'jointData'],
    physicsJoint: ['type', 'jointData'],
    physicsRaycastResult: [],
    proximityCastResult: [],
    shapeCastResult: [],
    havokPlugin: ['_useDeltaForWorldStep', 'hpInjection'],
    physicsCharacterController: ['position', 'characterShapeOptions', 'scene'],
    physicsAggregate: ['transformNode', 'type', '_options', '_scene'],
    physicsBody: ['transformNode', 'motionType', 'startsAsleep', 'scene'],
    ballAndSocketConstraint: ['pivotA', 'pivotB', 'axisA', 'axisB', 'scene'],
    distanceConstraint: ['maxDistance', 'scene'],
    hingeConstraint: ['pivotA', 'pivotB', 'axisA', 'axisB', 'scene'],
    lockConstraint: ['pivotA', 'pivotB', 'axisA', 'axisB', 'scene'],
    physics6DoFConstraint: ['constraintParams', 'limits', 'scene'],
    physicsConstraint: ['type', 'options', 'scene'],
    prismaticConstraint: ['pivotA', 'pivotB', 'axisA', 'axisB', 'scene'],
    sliderConstraint: ['pivotA', 'pivotB', 'axisA', 'axisB', 'scene'],
    springConstraint: ['pivotA', 'pivotB', 'axisA', 'axisB', 'minDistance', 'maxDistance', 'stiffness', 'damping', 'scene'],
    physicsShape: ['options', 'scene'],
    physicsShapeBox: ['center', 'rotation', 'extents', 'scene'],
    physicsShapeCapsule: ['pointA', 'pointB', 'radius', 'scene'],
    physicsShapeContainer: ['scene'],
    physicsShapeConvexHull: ['mesh', 'scene'],
    physicsShapeCylinder: ['pointA', 'pointB', 'radius', 'scene'],
    physicsShapeGroundMesh: ['groundMesh', 'scene'],
    physicsShapeHeightField: ['heightFieldSizeX', 'heightFieldSizeZ', 'numHeightFieldSamplesX', 'numHeightFieldSamplesZ', 'heightFieldData', 'scene'],
    physicsShapeMesh: ['mesh', 'scene'],
    physicsShapeSphere: ['center', 'radius', 'scene'],
    ragdoll: ['skeleton', 'rootTransformNode', 'config'],
    defaultRenderingPipeline: ['name', 'hdr', 'scene', 'cameras', 'automaticBuild'],
    lensRenderingPipeline: ['name', 'parameters', 'scene', 'ratio', 'cameras'],
    sSAO2RenderingPipeline: ['name', 'scene', 'ratio', 'cameras', 'forceGeometryBuffer', 'textureType'],
    sSAORenderingPipeline: ['name', 'scene', 'ratio', 'cameras'],
    sSRRenderingPipeline: ['name', 'scene', 'cameras', 'forceGeometryBuffer', 'textureType', 'useScreenspaceDepth'],
    standardRenderingPipeline: ['name', 'scene', 'ratio', 'originalPostProcess', 'cameras'],
    tAARenderingPipeline: ['name', 'scene', 'cameras', 'textureType'],
    postProcessRenderEffect: ['engine', 'name', 'getPostProcesses', 'singleInstance'],
    postProcessRenderPipeline: ['_engine', 'name'],
    postProcessRenderPipelineManager: [],
    postProcessRenderPipelineManagerSceneComponent: ['scene'],
    anaglyphPostProcess: ['name', 'options', 'rigCameras', 'samplingMode', 'engine', 'reusable'],
    blackAndWhitePostProcess: ['name', 'options', 'camera', 'samplingMode', 'engine', 'reusable'],
    bloomEffect: ['sceneOrEngine', 'bloomScale', 'bloomWeight', 'bloomKernel', 'pipelineTextureType', 'blockCompilation'],
    bloomMergePostProcess: ['name', 'originalFromInput', 'blurred', 'weight', 'options', 'camera', 'samplingMode', 'engine', 'reusable', 'textureType', 'blockCompilation'],
    blurPostProcess: ['name', 'direction', 'kernel', 'options', 'camera', 'samplingMode', 'engine', 'reusable', 'textureType', 'defines', 'blockCompilation', 'textureFormat'],
    chromaticAberrationPostProcess: ['name', 'screenWidth', 'screenHeight', 'options', 'camera', 'samplingMode', 'engine', 'reusable', 'textureType', 'blockCompilation'],
    circleOfConfusionPostProcess: ['name', 'depthTexture', 'options', 'camera', 'samplingMode', 'engine', 'reusable', 'textureType', 'blockCompilation'],
    colorCorrectionPostProcess: ['name', 'colorTableUrl', 'options', 'camera', 'samplingMode', 'engine', 'reusable'],
    convolutionPostProcess: ['name', 'kernel', 'options', 'camera', 'samplingMode', 'engine', 'reusable', 'textureType'],
    depthOfFieldBlurPostProcess: [
        'name',
        '_scene',
        'direction',
        'kernel',
        'options',
        'camera',
        'circleOfConfusion',
        'imageToBlur',
        'samplingMode',
        'engine',
        'reusable',
        'textureType',
        'blockCompilation',
        'textureFormat',
    ],
    depthOfFieldEffect: ['sceneOrEngine', 'depthTexture', 'blurLevel', 'pipelineTextureType', 'blockCompilation', 'depthNotNormalized'],
    depthOfFieldMergePostProcess: [
        'name',
        'originalFromInput',
        'circleOfConfusion',
        '_blurSteps',
        'options',
        'camera',
        'samplingMode',
        'engine',
        'reusable',
        'textureType',
        'blockCompilation',
    ],
    displayPassPostProcess: ['name', 'options', 'camera', 'samplingMode', 'engine', 'reusable'],
    extractHighlightsPostProcess: ['name', 'options', 'camera', 'samplingMode', 'engine', 'reusable', 'textureType', 'blockCompilation'],
    filterPostProcess: ['name', 'kernelMatrix', 'options', 'camera', 'samplingMode', 'engine', 'reusable'],
    fxaaPostProcess: ['name', 'options', 'camera', 'samplingMode', 'engine', 'reusable', 'textureType'],
    grainPostProcess: ['name', 'options', 'camera', 'samplingMode', 'engine', 'reusable', 'textureType', 'blockCompilation'],
    highlightsPostProcess: ['name', 'options', 'camera', 'samplingMode', 'engine', 'reusable', 'textureType'],
    imageProcessingPostProcess: ['name', 'options', 'camera', 'samplingMode', 'engine', 'reusable', 'textureType', 'imageProcessingConfiguration'],
    motionBlurPostProcess: ['name', 'scene', 'options', 'camera', 'samplingMode', 'engine', 'reusable', 'textureType', 'blockCompilation', 'forceGeometryBuffer'],
    passCubePostProcess: ['name', 'options', 'camera', 'samplingMode', 'engine', 'reusable', 'textureType', 'blockCompilation'],
    passPostProcess: ['name', 'options', 'camera', 'samplingMode', 'engine', 'reusable', 'textureType', 'blockCompilation'],
    postProcess: [
        'name',
        'fragmentUrl',
        'parameters',
        'samplers',
        '_size',
        'camera',
        'samplingMode',
        'engine',
        'reusable',
        'defines',
        'textureType',
        'vertexUrl',
        'indexParameters',
        'blockCompilation',
        'textureFormat',
        'shaderLanguage',
        'extraInitializations',
    ],
    postProcessManager: ['scene'],
    refractionPostProcess: ['name', 'refractionTextureUrl', 'color', 'depth', 'colorLevel', 'options', 'camera', 'samplingMode', 'engine', 'reusable'],
    screenSpaceCurvaturePostProcess: ['name', 'scene', 'options', 'camera', 'samplingMode', 'engine', 'reusable', 'textureType', 'blockCompilation'],
    screenSpaceReflectionPostProcess: ['name', 'scene', 'options', 'camera', 'samplingMode', 'engine', 'reusable', 'textureType', 'blockCompilation', 'forceGeometryBuffer'],
    sharpenPostProcess: ['name', 'options', 'camera', 'samplingMode', 'engine', 'reusable', 'textureType', 'blockCompilation'],
    stereoscopicInterlacePostProcess: ['name', 'rigCameras', 'isStereoscopicHoriz', 'samplingMode', 'engine', 'reusable'],
    stereoscopicInterlacePostProcessI: ['name', 'rigCameras', 'isStereoscopicHoriz', 'isStereoscopicInterlaced', 'samplingMode', 'engine', 'reusable'],
    subSurfaceScatteringPostProcess: ['name', 'scene', 'options', 'camera', 'samplingMode', 'engine', 'reusable', 'textureType'],
    thinBlackAndWhitePostProcess: ['name', 'engine', 'options'],
    thinBloomEffect: ['name', 'engine', 'scale', 'blockCompilation'],
    thinBloomMergePostProcess: ['name', 'engine', 'options'],
    thinBlurPostProcess: ['name', 'engine', 'direction', 'kernel', 'options'],
    thinCircleOfConfusionPostProcess: ['name', 'engine', 'options'],
    thinDepthOfFieldBlurPostProcess: ['name', 'engine', 'direction', 'kernel', 'options'],
    thinDepthOfFieldEffect: ['name', 'engine', 'blurLevel', 'depthNotNormalized', 'blockCompilation'],
    thinDepthOfFieldMergePostProcess: ['name', 'engine', 'options'],
    thinExtractHighlightsPostProcess: ['name', 'engine', 'options'],
    thinTAAPostProcess: ['name', 'engine', 'options'],
    tonemapPostProcess: ['name', '_operator', 'exposureAdjustment', 'camera', 'samplingMode', 'engine', 'textureFormat', 'reusable'],
    volumetricLightScatteringPostProcess: ['name', 'ratio', 'camera', 'mesh', 'samples', 'samplingMode', 'engine', 'reusable', 'scene'],
    vRDistortionCorrectionPostProcess: ['name', 'camera', 'isRightEye', 'vrMetrics'],
    vRMultiviewToSingleviewPostProcess: ['name', 'camera', 'scaleFactor'],
    reflectionProbe: ['name', 'size', 'scene', 'generateMipMaps', 'useFloat', 'linearSpace'],
    gIRSM: ['rsm'],
    gIRSMManager: ['scene', 'outputDimensions', 'giTextureDimensions', 'maxSamples', 'giTextureType'],
    gIRSMRenderPluginMaterial: ['material'],
    _IblShadowsAccumulationPass: ['scene', 'iblShadowsRenderPipeline'],
    iBLShadowsPluginMaterial: ['material'],
    iblShadowsRenderPipeline: ['name', 'scene', 'options', 'cameras'],
    _IblShadowsSpatialBlurPass: ['scene', 'iblShadowsRenderPipeline'],
    _IblShadowsVoxelRenderer: ['scene', 'iblShadowsRenderPipeline', 'resolutionExp', 'triPlanarVoxelization'],
    _IblShadowsVoxelTracingPass: ['scene', 'iblShadowsRenderPipeline'],
    boundingBoxRenderer: ['scene'],
    depthPeelingRenderer: ['scene', 'passCount'],
    depthPeelingSceneComponent: ['scene'],
    depthRenderer: ['scene', 'type', 'camera', 'storeNonLinearDepth', 'samplingMode', 'storeCameraSpaceZ', 'name'],
    depthRendererSceneComponent: ['scene'],
    edgesRenderer: ['source', 'epsilon', 'checkVerticesInsteadOfIndices', 'generateEdgesLines', 'options'],
    lineEdgesRenderer: ['source', 'epsilon', 'checkVerticesInsteadOfIndices'],
    fluidRenderer: ['scene'],
    fluidRendererSceneComponent: ['scene'],
    fluidRenderingDepthTextureCopy: ['engine', 'width', 'height', 'samples'],
    fluidRenderingObject: ['scene', 'shaderLanguage'],
    fluidRenderingObjectCustomParticles: ['scene', 'buffers', 'numParticles', 'shaderLanguage'],
    fluidRenderingObjectParticleSystem: ['scene', 'ps', 'shaderLanguage'],
    fluidRenderingTargetRenderer: ['scene', 'camera', 'shaderLanguage'],
    fluidRenderingTextures: [
        'name',
        'scene',
        'width',
        'height',
        'blurTextureSizeX',
        'blurTextureSizeY',
        'textureType',
        'textureFormat',
        'blurTextureType',
        'blurTextureFormat',
        'useStandardBlur',
        'camera',
        'generateDepthBuffer',
        'samples',
        'shaderLanguage',
    ],
    geometryBufferRenderer: ['scene', 'ratioOrDimensions', 'depthFormat', 'textureTypesAndFormats'],
    geometryBufferRendererSceneComponent: ['scene'],
    iblCdfGenerator: ['scene'],
    iblCdfGeneratorSceneComponent: ['scene'],
    motionBlurConfiguration: [],
    objectRenderer: ['name', 'scene', 'options'],
    outlineRenderer: ['scene'],
    prePassRenderer: ['scene'],
    prePassRendererSceneComponent: ['scene'],
    rSMCreatePluginMaterial: ['material'],
    reflectiveShadowMap: ['scene', 'light', 'textureDimensions'],
    renderingGroup: ['index', 'scene', 'opaqueSortCompareFn', 'alphaTestSortCompareFn', 'transparentSortCompareFn'],
    renderingManager: ['scene'],
    screenSpaceReflections2Configuration: ['useScreenspaceDepth'],
    screenSpaceReflectionsConfiguration: [],
    sSAO2Configuration: [],
    subSurfaceConfiguration: ['scene'],
    subSurfaceSceneComponent: ['scene'],
    utilityLayerRenderer: ['originalScene', 'handleEvents'],
    sprite: ['name', 'manager'],
    spriteManager: ['name', 'imgUrl', 'capacity', 'cellSize', 'scene', 'epsilon', 'samplingMode', 'fromPacked', 'spriteJSON', 'options'],
    spriteMap: ['name', 'atlasJSON', 'spriteSheet', 'options', 'scene'],
    spritePackedManager: ['name', 'imgUrl', 'capacity', 'scene', 'spriteJSON', 'epsilon', 'samplingMode', 'options'],
    spriteRenderer: ['engine', 'capacity', 'epsilon', 'scene', 'rendererOptions'],
    spriteSceneComponent: ['scene'],
    thinSprite: [],
    alphaState: [],
    depthCullingState: ['reset'],
    stencilState: [],
    stencilStateComposer: ['reset'],
    webXRCompositionLayerRenderTargetTextureProvider: ['_xrSessionManager', '_xrWebGLBinding', 'layerWrapper'],
    webXRCompositionLayerWrapper: ['getWidth', 'getHeight', 'layer', 'layerType', 'isMultiview', 'createRTTProvider', '_originalInternalTexture'],
    webXRProjectionLayerWrapper: ['layer', 'isMultiview', 'xrGLBinding'],
    webXRAbstractFeature: ['_xrSessionManager'],
    webXRAnchorSystem: ['_xrSessionManager', '_options'],
    webXRBackgroundRemover: ['_xrSessionManager', 'options'],
    webXRControllerMovement: ['_xrSessionManager', 'options'],
    webXRControllerPhysics: ['_xrSessionManager', '_options'],
    webXRControllerPointerSelection: ['_xrSessionManager', '_options'],
    webXRMotionControllerTeleportation: ['_xrSessionManager', '_options'],
    webXRDomOverlay: ['_xrSessionManager', 'options'],
    webXRDepthSensing: ['_xrSessionManager', 'options'],
    webXREyeTracking: ['_xrSessionManager'],
    webXRFeaturePointSystem: ['_xrSessionManager'],
    webXRHand: ['xrController', '_jointMeshes', '_handMesh', 'rigMapping', '_leftHandedMeshes', '_jointsInvisible', '_jointScaleFactor'],
    webXRHandTracking: ['_xrSessionManager', 'options'],
    webXRHitTest: ['_xrSessionManager', 'options'],
    webXRHitTestLegacy: ['_xrSessionManager', 'options'],
    webXRImageTracking: ['_xrSessionManager', 'options'],
    webXRLayers: ['_xrSessionManager', '_options'],
    webXRLightEstimation: ['_xrSessionManager', 'options'],
    webXRMeshDetector: ['_xrSessionManager', '_options'],
    webXRNearInteraction: ['_xrSessionManager', '_options'],
    webXRPlaneDetector: ['_xrSessionManager', '_options'],
    webXRRawCameraAccess: ['_xrSessionManager', 'options'],
    webXRSpaceWarp: ['_xrSessionManager'],
    webXRSpaceWarpRenderTargetTextureProvider: ['_scene', '_xrSessionManager', '_xrWebGLBinding'],
    xRSpaceWarpRenderTarget: ['motionVectorTexture', 'depthStencilTexture', 'scene', 'size'],
    webXRWalkingLocomotion: ['sessionManager', 'options'],
    webXRAbstractMotionController: ['scene', 'layout', 'gamepadObject', 'handedness', '_doNotLoadControllerMesh', '_controllerCache'],
    webXRControllerComponent: ['id', 'type', '_buttonIndex', '_axesIndices'],
    webXRGenericHandController: ['scene', 'gamepadObject', 'handedness'],
    webXRGenericTriggerMotionController: ['scene', 'gamepadObject', 'handedness'],
    webXRHTCViveMotionController: ['scene', 'gamepadObject', 'handedness'],
    webXRMicrosoftMixedRealityController: ['scene', 'gamepadObject', 'handedness'],
    webXROculusTouchMotionController: ['scene', 'gamepadObject', 'handedness', '_legacyMapping', '_forceLegacyControllers'],
    webXRProfiledMotionController: ['scene', 'xrInput', '_profile', '_repositoryUrl', 'controllerCache'],
    nativeXRFrame: ['_nativeImpl'],
    nativeXRLayerRenderTargetTextureProvider: ['sessionManager', 'layerWrapper'],
    nativeXRLayerWrapper: ['layer'],
    nativeXRRenderTarget: ['_xrSessionManager'],
    webXRCamera: ['name', 'scene', '_xrSessionManager'],
    webXRDefaultExperience: [],
    webXREnterExitUI: ['_scene', 'options'],
    webXREnterExitUIButton: ['element', 'sessionMode', 'referenceSpaceType'],
    webXRExperienceHelper: ['_scene'],
    webXRFeaturesManager: ['_xrSessionManager'],
    webXRInput: ['xrSessionManager', 'xrCamera', '_options'],
    webXRInputSource: ['_scene', 'inputSource', '_options'],
    webXRLayerWrapper: ['getWidth', 'getHeight', 'layer', 'layerType', '_createRenderTargetTextureProvider'],
    webXRManagedOutputCanvas: ['_xrSessionManager', '_options'],
    webXRLayerRenderTargetTextureProvider: ['_scene', 'layerWrapper'],
    webXRSessionManager: ['scene'],
    webXRWebGLLayerRenderTargetTextureProvider: ['scene', 'layerWrapper'],
    webXRWebGLLayerWrapper: ['layer'],
    abstractAssetContainer: [],
    assetContainer: ['scene'],
    instantiatedEntries: [],
    node: ['name', 'scene', 'isPure'],
    scene: ['engine', 'options'],
    stage: ['items'],
};
export default ConstructorsMap;
